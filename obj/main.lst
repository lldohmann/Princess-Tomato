                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _init_gfx
                                     13 	.globl _printMap
                                     14 	.globl _check_map
                                     15 	.globl _performantdelay
                                     16 	.globl _puts
                                     17 	.globl _printf
                                     18 	.globl _set_sprite_data
                                     19 	.globl _set_bkg_tiles
                                     20 	.globl _set_bkg_data
                                     21 	.globl _wait_vbl_done
                                     22 	.globl _joypad
                                     23 	.globl _joy
                                     24 	.globl _map_collision
                                     25 	.globl _player_metasprites
                                     26 	.globl _player_down
                                     27 ;--------------------------------------------------------
                                     28 ; special function registers
                                     29 ;--------------------------------------------------------
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DATA
      000000                         34 _joy::
      000000                         35 	.ds 1
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _INITIALIZED
                                     40 ;--------------------------------------------------------
                                     41 ; absolute external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _DABS (ABS)
                                     44 ;--------------------------------------------------------
                                     45 ; global & static initialisations
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _GSINIT
                                     49 	.area _GSFINAL
                                     50 	.area _GSINIT
                                     51 ;--------------------------------------------------------
                                     52 ; Home
                                     53 ;--------------------------------------------------------
                                     54 	.area _HOME
                                     55 	.area _HOME
                                     56 ;--------------------------------------------------------
                                     57 ; code
                                     58 ;--------------------------------------------------------
                                     59 	.area _CODE
                                     60 ;src\main.c:9: void performantdelay(uint8_t numloops)
                                     61 ;	---------------------------------
                                     62 ; Function performantdelay
                                     63 ; ---------------------------------
      000000                         64 _performantdelay::
      000000 4F               [ 4]   65 	ld	c, a
                                     66 ;src\main.c:12: for (ii = 0; ii < numloops; ii++)
      000001 06 00            [ 8]   67 	ld	b, #0x00
      000003                         68 00103$:
      000003 78               [ 4]   69 	ld	a, b
      000004 91               [ 4]   70 	sub	a, c
      000005 D0               [20]   71 	ret	NC
                                     72 ;src\main.c:14: wait_vbl_done();
      000006 CDr00r00         [24]   73 	call	_wait_vbl_done
                                     74 ;src\main.c:12: for (ii = 0; ii < numloops; ii++)
      000009 04               [ 4]   75 	inc	b
                                     76 ;src\main.c:16: }
      00000A 18 F7            [12]   77 	jr	00103$
                                     78 ;src\main.c:42: char check_map(uint8_t x_pos, uint8_t y_pos)
                                     79 ;	---------------------------------
                                     80 ; Function check_map
                                     81 ; ---------------------------------
      00000C                         82 _check_map::
      00000C 4F               [ 4]   83 	ld	c, a
                                     84 ;src\main.c:44: return map_collision[y_pos][x_pos];
      00000D 16 00            [ 8]   85 	ld	d, #0x00
      00000F 6B               [ 4]   86 	ld	l, e
      000010 62               [ 4]   87 	ld	h, d
      000011 29               [ 8]   88 	add	hl, hl
      000012 29               [ 8]   89 	add	hl, hl
      000013 19               [ 8]   90 	add	hl, de
      000014 29               [ 8]   91 	add	hl, hl
      000015 19               [ 8]   92 	add	hl, de
      000016 11r36r00         [12]   93 	ld	de, #_map_collision
      000019 19               [ 8]   94 	add	hl, de
      00001A 59               [ 4]   95 	ld	e, c
      00001B 16 00            [ 8]   96 	ld	d, #0x00
      00001D 19               [ 8]   97 	add	hl, de
      00001E 7E               [ 8]   98 	ld	a, (hl)
                                     99 ;src\main.c:45: }
      00001F C9               [16]  100 	ret
      000020                        101 _player_down:
      000020 F8                     102 	.db #0xf8	; -8
      000021 F8                     103 	.db #0xf8	; -8
      000022 00                     104 	.db #0x00	; 0
      000023 00                     105 	.db #0x00	; 0
      000024 00                     106 	.db #0x00	;  0
      000025 08                     107 	.db #0x08	;  8
      000026 02                     108 	.db #0x02	; 2
      000027 00                     109 	.db #0x00	; 0
      000028 08                     110 	.db #0x08	;  8
      000029 F8                     111 	.db #0xf8	; -8
      00002A 01                     112 	.db #0x01	; 1
      00002B 00                     113 	.db #0x00	; 0
      00002C 00                     114 	.db #0x00	;  0
      00002D 08                     115 	.db #0x08	;  8
      00002E 03                     116 	.db #0x03	; 3
      00002F 00                     117 	.db #0x00	; 0
      000030 80                     118 	.db #0x80	; -128
      000031 00                     119 	.db #0x00	;  0
      000032 00                     120 	.db #0x00	; 0
      000033 00                     121 	.db #0x00	; 0
      000034                        122 _player_metasprites:
      000034r20r00                  123 	.dw _player_down
      000036                        124 _map_collision:
      000036 31                     125 	.db #0x31	; 49	'1'
      000037 31                     126 	.db #0x31	; 49	'1'
      000038 31                     127 	.db #0x31	; 49	'1'
      000039 31                     128 	.db #0x31	; 49	'1'
      00003A 31                     129 	.db #0x31	; 49	'1'
      00003B 31                     130 	.db #0x31	; 49	'1'
      00003C 31                     131 	.db #0x31	; 49	'1'
      00003D 31                     132 	.db #0x31	; 49	'1'
      00003E 31                     133 	.db #0x31	; 49	'1'
      00003F 31                     134 	.db #0x31	; 49	'1'
      000040 00                     135 	.db 0x00
      000041 31                     136 	.db #0x31	; 49	'1'
      000042 31                     137 	.db #0x31	; 49	'1'
      000043 31                     138 	.db #0x31	; 49	'1'
      000044 31                     139 	.db #0x31	; 49	'1'
      000045 31                     140 	.db #0x31	; 49	'1'
      000046 31                     141 	.db #0x31	; 49	'1'
      000047 31                     142 	.db #0x31	; 49	'1'
      000048 31                     143 	.db #0x31	; 49	'1'
      000049 31                     144 	.db #0x31	; 49	'1'
      00004A 31                     145 	.db #0x31	; 49	'1'
      00004B 00                     146 	.db 0x00
      00004C 31                     147 	.db #0x31	; 49	'1'
      00004D 31                     148 	.db #0x31	; 49	'1'
      00004E 31                     149 	.db #0x31	; 49	'1'
      00004F 31                     150 	.db #0x31	; 49	'1'
      000050 30                     151 	.db #0x30	; 48	'0'
      000051 30                     152 	.db #0x30	; 48	'0'
      000052 30                     153 	.db #0x30	; 48	'0'
      000053 30                     154 	.db #0x30	; 48	'0'
      000054 30                     155 	.db #0x30	; 48	'0'
      000055 31                     156 	.db #0x31	; 49	'1'
      000056 00                     157 	.db 0x00
      000057 31                     158 	.db #0x31	; 49	'1'
      000058 31                     159 	.db #0x31	; 49	'1'
      000059 31                     160 	.db #0x31	; 49	'1'
      00005A 31                     161 	.db #0x31	; 49	'1'
      00005B 30                     162 	.db #0x30	; 48	'0'
      00005C 31                     163 	.db #0x31	; 49	'1'
      00005D 30                     164 	.db #0x30	; 48	'0'
      00005E 31                     165 	.db #0x31	; 49	'1'
      00005F 30                     166 	.db #0x30	; 48	'0'
      000060 31                     167 	.db #0x31	; 49	'1'
      000061 00                     168 	.db 0x00
      000062 30                     169 	.db #0x30	; 48	'0'
      000063 30                     170 	.db #0x30	; 48	'0'
      000064 30                     171 	.db #0x30	; 48	'0'
      000065 30                     172 	.db #0x30	; 48	'0'
      000066 30                     173 	.db #0x30	; 48	'0'
      000067 30                     174 	.db #0x30	; 48	'0'
      000068 30                     175 	.db #0x30	; 48	'0'
      000069 30                     176 	.db #0x30	; 48	'0'
      00006A 30                     177 	.db #0x30	; 48	'0'
      00006B 31                     178 	.db #0x31	; 49	'1'
      00006C 00                     179 	.db 0x00
      00006D 31                     180 	.db #0x31	; 49	'1'
      00006E 31                     181 	.db #0x31	; 49	'1'
      00006F 31                     182 	.db #0x31	; 49	'1'
      000070 31                     183 	.db #0x31	; 49	'1'
      000071 30                     184 	.db #0x30	; 48	'0'
      000072 31                     185 	.db #0x31	; 49	'1'
      000073 30                     186 	.db #0x30	; 48	'0'
      000074 31                     187 	.db #0x31	; 49	'1'
      000075 30                     188 	.db #0x30	; 48	'0'
      000076 31                     189 	.db #0x31	; 49	'1'
      000077 00                     190 	.db 0x00
      000078 31                     191 	.db #0x31	; 49	'1'
      000079 31                     192 	.db #0x31	; 49	'1'
      00007A 31                     193 	.db #0x31	; 49	'1'
      00007B 31                     194 	.db #0x31	; 49	'1'
      00007C 30                     195 	.db #0x30	; 48	'0'
      00007D 30                     196 	.db #0x30	; 48	'0'
      00007E 30                     197 	.db #0x30	; 48	'0'
      00007F 30                     198 	.db #0x30	; 48	'0'
      000080 30                     199 	.db #0x30	; 48	'0'
      000081 31                     200 	.db #0x31	; 49	'1'
      000082 00                     201 	.db 0x00
      000083 31                     202 	.db #0x31	; 49	'1'
      000084 31                     203 	.db #0x31	; 49	'1'
      000085 31                     204 	.db #0x31	; 49	'1'
      000086 31                     205 	.db #0x31	; 49	'1'
      000087 31                     206 	.db #0x31	; 49	'1'
      000088 31                     207 	.db #0x31	; 49	'1'
      000089 31                     208 	.db #0x31	; 49	'1'
      00008A 31                     209 	.db #0x31	; 49	'1'
      00008B 31                     210 	.db #0x31	; 49	'1'
      00008C 31                     211 	.db #0x31	; 49	'1'
      00008D 00                     212 	.db 0x00
      00008E 31                     213 	.db #0x31	; 49	'1'
      00008F 31                     214 	.db #0x31	; 49	'1'
      000090 31                     215 	.db #0x31	; 49	'1'
      000091 31                     216 	.db #0x31	; 49	'1'
      000092 31                     217 	.db #0x31	; 49	'1'
      000093 31                     218 	.db #0x31	; 49	'1'
      000094 31                     219 	.db #0x31	; 49	'1'
      000095 31                     220 	.db #0x31	; 49	'1'
      000096 31                     221 	.db #0x31	; 49	'1'
      000097 31                     222 	.db #0x31	; 49	'1'
      000098 00                     223 	.db 0x00
      000099 00                     224 	.db 0x00
      00009A 00                     225 	.db 0x00
      00009B 00                     226 	.db 0x00
      00009C 00                     227 	.db 0x00
      00009D 00                     228 	.db 0x00
      00009E 00                     229 	.db 0x00
      00009F 00                     230 	.db 0x00
      0000A0 00                     231 	.db 0x00
      0000A1 00                     232 	.db 0x00
      0000A2 00                     233 	.db 0x00
      0000A3 00                     234 	.db 0x00
                                    235 ;src\main.c:47: void printMap() {
                                    236 ;	---------------------------------
                                    237 ; Function printMap
                                    238 ; ---------------------------------
      0000A4                        239 _printMap::
                                    240 ;src\main.c:48: for (uint8_t y = 0; y < 11; y++)
      0000A4 0E 00            [ 8]  241 	ld	c, #0x00
      0000A6                        242 00107$:
      0000A6 79               [ 4]  243 	ld	a, c
      0000A7 D6 0B            [ 8]  244 	sub	a, #0x0b
      0000A9 D0               [20]  245 	ret	NC
                                    246 ;src\main.c:50: for (uint8_t x = 0; x < 10; x++)
      0000AA 06 00            [ 8]  247 	ld	b, #0x00
      0000AC 69               [ 4]  248 	ld	l, c
      0000AD 60               [ 4]  249 	ld	h, b
      0000AE 29               [ 8]  250 	add	hl, hl
      0000AF 29               [ 8]  251 	add	hl, hl
      0000B0 09               [ 8]  252 	add	hl, bc
      0000B1 29               [ 8]  253 	add	hl, hl
      0000B2 09               [ 8]  254 	add	hl, bc
      0000B3 7D               [ 4]  255 	ld	a, l
      0000B4 C6r36            [ 8]  256 	add	a, #<(_map_collision)
      0000B6 5F               [ 4]  257 	ld	e, a
      0000B7 7C               [ 4]  258 	ld	a, h
      0000B8 CEs00            [ 8]  259 	adc	a, #>(_map_collision)
      0000BA 57               [ 4]  260 	ld	d, a
      0000BB 06 00            [ 8]  261 	ld	b, #0x00
      0000BD                        262 00104$:
      0000BD 78               [ 4]  263 	ld	a, b
      0000BE D6 0A            [ 8]  264 	sub	a, #0x0a
      0000C0 30 18            [12]  265 	jr	NC, 00101$
                                    266 ;src\main.c:52: printf("%c ", map_collision[y][x]);
      0000C2 68               [ 4]  267 	ld	l, b
      0000C3 26 00            [ 8]  268 	ld	h, #0x00
      0000C5 19               [ 8]  269 	add	hl, de
      0000C6 6E               [ 8]  270 	ld	l, (hl)
                                    271 ;	spillPairReg hl
      0000C7 26 00            [ 8]  272 	ld	h, #0x00
                                    273 ;	spillPairReg hl
                                    274 ;	spillPairReg hl
      0000C9 C5               [16]  275 	push	bc
      0000CA D5               [16]  276 	push	de
      0000CB E5               [16]  277 	push	hl
      0000CC 21rE5r00         [12]  278 	ld	hl, #___str_0
      0000CF E5               [16]  279 	push	hl
      0000D0 CDr00r00         [24]  280 	call	_printf
      0000D3 E8 04            [16]  281 	add	sp, #4
      0000D5 D1               [12]  282 	pop	de
      0000D6 C1               [12]  283 	pop	bc
                                    284 ;src\main.c:50: for (uint8_t x = 0; x < 10; x++)
      0000D7 04               [ 4]  285 	inc	b
      0000D8 18 E3            [12]  286 	jr	00104$
      0000DA                        287 00101$:
                                    288 ;src\main.c:54: printf("\n\n");
      0000DA C5               [16]  289 	push	bc
      0000DB 11rE9r00         [12]  290 	ld	de, #___str_2
      0000DE CDr00r00         [24]  291 	call	_puts
      0000E1 C1               [12]  292 	pop	bc
                                    293 ;src\main.c:48: for (uint8_t y = 0; y < 11; y++)
      0000E2 0C               [ 4]  294 	inc	c
                                    295 ;src\main.c:56: }
      0000E3 18 C1            [12]  296 	jr	00107$
      0000E5                        297 ___str_0:
      0000E5 25 63 20               298 	.ascii "%c "
      0000E8 00                     299 	.db 0x00
      0000E9                        300 ___str_2:
      0000E9 0A                     301 	.db 0x0a
      0000EA 00                     302 	.db 0x00
                                    303 ;src\main.c:58: void init_gfx() {
                                    304 ;	---------------------------------
                                    305 ; Function init_gfx
                                    306 ; ---------------------------------
      0000EB                        307 _init_gfx::
                                    308 ;src\main.c:60: set_bkg_data(0, 54u, TileLabel);
      0000EB 11r00r00         [12]  309 	ld	de, #_TileLabel
      0000EE D5               [16]  310 	push	de
      0000EF 21 00 36         [12]  311 	ld	hl, #0x3600
      0000F2 E5               [16]  312 	push	hl
      0000F3 CDr00r00         [24]  313 	call	_set_bkg_data
      0000F6 E8 04            [16]  314 	add	sp, #4
                                    315 ;src\main.c:61: set_bkg_tiles(0, 0, 20u, 18u, Visual_Map);
      0000F8 11r00r00         [12]  316 	ld	de, #_Visual_Map
      0000FB D5               [16]  317 	push	de
      0000FC 21 14 12         [12]  318 	ld	hl, #0x1214
      0000FF E5               [16]  319 	push	hl
      000100 AF               [ 4]  320 	xor	a, a
      000101 0F               [ 4]  321 	rrca
      000102 F5               [16]  322 	push	af
      000103 CDr00r00         [24]  323 	call	_set_bkg_tiles
      000106 E8 06            [16]  324 	add	sp, #6
                                    325 ;src\main.c:64: SHOW_BKG;
      000108 F0r00            [12]  326 	ldh	a, (_LCDC_REG + 0)
      00010A F6 01            [ 8]  327 	or	a, #0x01
      00010C E0r00            [12]  328 	ldh	(_LCDC_REG + 0), a
                                    329 ;src\main.c:67: set_sprite_data(0, 45u, Cast_Tiles);
      00010E 11r00r00         [12]  330 	ld	de, #_Cast_Tiles
      000111 D5               [16]  331 	push	de
      000112 21 00 2D         [12]  332 	ld	hl, #0x2d00
      000115 E5               [16]  333 	push	hl
      000116 CDr00r00         [24]  334 	call	_set_sprite_data
      000119 E8 04            [16]  335 	add	sp, #4
                                    336 ;src\main.c:68: SHOW_SPRITES;
      00011B F0r00            [12]  337 	ldh	a, (_LCDC_REG + 0)
      00011D F6 02            [ 8]  338 	or	a, #0x02
      00011F E0r00            [12]  339 	ldh	(_LCDC_REG + 0), a
                                    340 ;src\main.c:69: }
      000121 C9               [16]  341 	ret
                                    342 ;src\main.c:73: void main(void)
                                    343 ;	---------------------------------
                                    344 ; Function main
                                    345 ; ---------------------------------
      000122                        346 _main::
      000122 E8 F9            [16]  347 	add	sp, #-7
                                    348 ;src\main.c:76: uint8_t local_x = 4; // LOCAL LOCATION ON MAP
      000124 F8 01            [12]  349 	ldhl	sp,	#1
                                    350 ;src\main.c:77: uint8_t local_y = 4;
      000126 3E 04            [ 8]  351 	ld	a, #0x04
      000128 22               [ 8]  352 	ld	(hl+), a
      000129 36 04            [12]  353 	ld	(hl), #0x04
                                    354 ;src\main.c:78: uint8_t sprite_x = 80; // SPRITE LOCATION ON SCREEN
      00012B F8 06            [12]  355 	ldhl	sp,	#6
      00012D 36 50            [12]  356 	ld	(hl), #0x50
                                    357 ;src\main.c:79: uint8_t sprite_y = 88;
      00012F F8 03            [12]  358 	ldhl	sp,	#3
                                    359 ;src\main.c:81: enum player_state state = idle;
      000131 3E 58            [ 8]  360 	ld	a, #0x58
      000133 22               [ 8]  361 	ld	(hl+), a
      000134 36 00            [12]  362 	ld	(hl), #0x00
                                    363 ;src\main.c:82: init_gfx();
      000136 CDrEBr00         [24]  364 	call	_init_gfx
                                    365 ;src\main.c:83: volatile uint8_t timer = 0;
      000139 F8 00            [12]  366 	ldhl	sp,	#0
      00013B 36 00            [12]  367 	ld	(hl), #0x00
                                    368 ;src\main.c:84: move_metasprite(player_metasprites[0], 0, 0, 80, 88);
      00013D 21r34r00         [12]  369 	ld	hl, #_player_metasprites
      000140 2A               [ 8]  370 	ld	a, (hl+)
      000141 4F               [ 4]  371 	ld	c, a
      000142 7E               [ 8]  372 	ld	a, (hl)
                                    373 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      000143 21r00r00         [12]  374 	ld	hl, #___current_metasprite
      000146 71               [ 8]  375 	ld	(hl), c
      000147 23               [ 8]  376 	inc	hl
      000148 77               [ 8]  377 	ld	(hl), a
                                    378 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000149 21r00r00         [12]  379 	ld	hl, #___current_base_tile
      00014C 36 00            [12]  380 	ld	(hl), #0x00
                                    381 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      00014E 21 50 58         [12]  382 	ld	hl, #0x5850
      000151 E5               [16]  383 	push	hl
      000152 AF               [ 4]  384 	xor	a, a
      000153 F5               [16]  385 	push	af
      000154 33               [ 8]  386 	inc	sp
      000155 CDr00r00         [24]  387 	call	___move_metasprite
      000158 E8 03            [16]  388 	add	sp, #3
                                    389 ;src\main.c:87: while(1) {
      00015A F8 05            [12]  390 	ldhl	sp,	#5
      00015C 36 00            [12]  391 	ld	(hl), #0x00
      00015E                        392 00129$:
                                    393 ;src\main.c:88: joy = joypad();
      00015E CDr00r00         [24]  394 	call	_joypad
      000161 EAr00r00         [16]  395 	ld	(#_joy),a
                                    396 ;src\main.c:89: timer++;
      000164 F8 00            [12]  397 	ldhl	sp,	#0
      000166 34               [12]  398 	inc	(hl)
      000167 7E               [ 8]  399 	ld	a, (hl)
                                    400 ;src\main.c:90: if (state == idle)
      000168 F8 04            [12]  401 	ldhl	sp,	#4
      00016A 7E               [ 8]  402 	ld	a, (hl)
      00016B B7               [ 4]  403 	or	a, a
      00016C C2r67r02         [16]  404 	jp	NZ, 00126$
                                    405 ;src\main.c:93: if (joy & J_UP)
      00016F FAr00r00         [16]  406 	ld	a, (#_joy)
                                    407 ;src\main.c:95: if (check_map(local_x, local_y - 1) == '0')
      000172 F8 02            [12]  408 	ldhl	sp,	#2
      000174 4E               [ 8]  409 	ld	c, (hl)
                                    410 ;src\main.c:98: sprite_y -= 16;
      000175 23               [ 8]  411 	inc	hl
      000176 46               [ 8]  412 	ld	b, (hl)
                                    413 ;src\main.c:93: if (joy & J_UP)
      000177 CB 57            [ 8]  414 	bit	2, a
      000179 28 40            [12]  415 	jr	Z, 00118$
                                    416 ;src\main.c:95: if (check_map(local_x, local_y - 1) == '0')
      00017B 0D               [ 4]  417 	dec	c
      00017C C5               [16]  418 	push	bc
      00017D 59               [ 4]  419 	ld	e, c
      00017E F8 03            [12]  420 	ldhl	sp,	#3
      000180 7E               [ 8]  421 	ld	a, (hl)
      000181 CDr0Cr00         [24]  422 	call	_check_map
      000184 C1               [12]  423 	pop	bc
      000185 D6 30            [ 8]  424 	sub	a, #0x30
      000187 C2rA2r02         [16]  425 	jp	NZ,00127$
                                    426 ;src\main.c:97: local_y -= 1;
      00018A F8 02            [12]  427 	ldhl	sp,	#2
                                    428 ;src\main.c:98: sprite_y -= 16;
      00018C 79               [ 4]  429 	ld	a, c
      00018D 22               [ 8]  430 	ld	(hl+), a
      00018E 78               [ 4]  431 	ld	a, b
      00018F C6 F0            [ 8]  432 	add	a, #0xf0
      000191 77               [ 8]  433 	ld	(hl), a
                                    434 ;src\main.c:99: move_metasprite(player_metasprites[0], 0, 0, sprite_x, sprite_y);
      000192 21r34r00         [12]  435 	ld	hl, #_player_metasprites
      000195 2A               [ 8]  436 	ld	a, (hl+)
      000196 4F               [ 4]  437 	ld	c, a
      000197 7E               [ 8]  438 	ld	a, (hl)
                                    439 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      000198 21r00r00         [12]  440 	ld	hl, #___current_metasprite
      00019B 71               [ 8]  441 	ld	(hl), c
      00019C 23               [ 8]  442 	inc	hl
      00019D 77               [ 8]  443 	ld	(hl), a
                                    444 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      00019E 21r00r00         [12]  445 	ld	hl, #___current_base_tile
      0001A1 36 00            [12]  446 	ld	(hl), #0x00
                                    447 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0001A3 F8 03            [12]  448 	ldhl	sp,	#3
      0001A5 7E               [ 8]  449 	ld	a, (hl)
      0001A6 F5               [16]  450 	push	af
      0001A7 33               [ 8]  451 	inc	sp
      0001A8 F8 07            [12]  452 	ldhl	sp,	#7
      0001AA 66               [ 8]  453 	ld	h, (hl)
      0001AB 2E 00            [ 8]  454 	ld	l, #0x00
      0001AD E5               [16]  455 	push	hl
      0001AE CDr00r00         [24]  456 	call	___move_metasprite
      0001B1 E8 03            [16]  457 	add	sp, #3
                                    458 ;src\main.c:100: performantdelay(30);
      0001B3 3E 1E            [ 8]  459 	ld	a, #0x1e
      0001B5 CDr00r00         [24]  460 	call	_performantdelay
      0001B8 C3rA2r02         [16]  461 	jp	00127$
      0001BB                        462 00118$:
                                    463 ;src\main.c:103: else if (joy & J_DOWN)
      0001BB CB 5F            [ 8]  464 	bit	3, a
      0001BD 28 40            [12]  465 	jr	Z, 00115$
                                    466 ;src\main.c:105: if (check_map(local_x, local_y + 1) == '0')
      0001BF 0C               [ 4]  467 	inc	c
      0001C0 C5               [16]  468 	push	bc
      0001C1 59               [ 4]  469 	ld	e, c
      0001C2 F8 03            [12]  470 	ldhl	sp,	#3
      0001C4 7E               [ 8]  471 	ld	a, (hl)
      0001C5 CDr0Cr00         [24]  472 	call	_check_map
      0001C8 C1               [12]  473 	pop	bc
      0001C9 D6 30            [ 8]  474 	sub	a, #0x30
      0001CB C2rA2r02         [16]  475 	jp	NZ,00127$
                                    476 ;src\main.c:107: local_y += 1;
      0001CE F8 02            [12]  477 	ldhl	sp,	#2
                                    478 ;src\main.c:108: sprite_y += 16;
      0001D0 79               [ 4]  479 	ld	a, c
      0001D1 22               [ 8]  480 	ld	(hl+), a
      0001D2 78               [ 4]  481 	ld	a, b
      0001D3 C6 10            [ 8]  482 	add	a, #0x10
      0001D5 77               [ 8]  483 	ld	(hl), a
                                    484 ;src\main.c:109: move_metasprite(player_metasprites[0], 0, 0, sprite_x, sprite_y);
      0001D6 21r34r00         [12]  485 	ld	hl, #_player_metasprites
      0001D9 2A               [ 8]  486 	ld	a, (hl+)
      0001DA 4F               [ 4]  487 	ld	c, a
      0001DB 7E               [ 8]  488 	ld	a, (hl)
                                    489 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0001DC 21r00r00         [12]  490 	ld	hl, #___current_metasprite
      0001DF 71               [ 8]  491 	ld	(hl), c
      0001E0 23               [ 8]  492 	inc	hl
      0001E1 77               [ 8]  493 	ld	(hl), a
                                    494 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      0001E2 21r00r00         [12]  495 	ld	hl, #___current_base_tile
      0001E5 36 00            [12]  496 	ld	(hl), #0x00
                                    497 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0001E7 F8 03            [12]  498 	ldhl	sp,	#3
      0001E9 7E               [ 8]  499 	ld	a, (hl)
      0001EA F5               [16]  500 	push	af
      0001EB 33               [ 8]  501 	inc	sp
      0001EC F8 07            [12]  502 	ldhl	sp,	#7
      0001EE 66               [ 8]  503 	ld	h, (hl)
      0001EF 2E 00            [ 8]  504 	ld	l, #0x00
      0001F1 E5               [16]  505 	push	hl
      0001F2 CDr00r00         [24]  506 	call	___move_metasprite
      0001F5 E8 03            [16]  507 	add	sp, #3
                                    508 ;src\main.c:110: performantdelay(30);
      0001F7 3E 1E            [ 8]  509 	ld	a, #0x1e
      0001F9 CDr00r00         [24]  510 	call	_performantdelay
      0001FC C3rA2r02         [16]  511 	jp	00127$
      0001FF                        512 00115$:
                                    513 ;src\main.c:115: if (check_map(local_x - 1, local_y) == '0')
      0001FF F8 01            [12]  514 	ldhl	sp,	#1
      000201 4E               [ 8]  515 	ld	c, (hl)
                                    516 ;src\main.c:118: sprite_x -= 16;
      000202 F8 06            [12]  517 	ldhl	sp,	#6
      000204 46               [ 8]  518 	ld	b, (hl)
                                    519 ;src\main.c:113: else if (joy & J_LEFT)
      000205 CB 4F            [ 8]  520 	bit	1, a
      000207 28 40            [12]  521 	jr	Z, 00112$
                                    522 ;src\main.c:115: if (check_map(local_x - 1, local_y) == '0')
      000209 0D               [ 4]  523 	dec	c
      00020A C5               [16]  524 	push	bc
      00020B F8 04            [12]  525 	ldhl	sp,	#4
      00020D 5E               [ 8]  526 	ld	e, (hl)
      00020E 79               [ 4]  527 	ld	a, c
      00020F CDr0Cr00         [24]  528 	call	_check_map
      000212 C1               [12]  529 	pop	bc
      000213 D6 30            [ 8]  530 	sub	a, #0x30
      000215 C2rA2r02         [16]  531 	jp	NZ,00127$
                                    532 ;src\main.c:117: local_x -= 1;
      000218 F8 01            [12]  533 	ldhl	sp,	#1
      00021A 71               [ 8]  534 	ld	(hl), c
                                    535 ;src\main.c:118: sprite_x -= 16;
      00021B 78               [ 4]  536 	ld	a, b
      00021C C6 F0            [ 8]  537 	add	a, #0xf0
      00021E F8 06            [12]  538 	ldhl	sp,	#6
      000220 77               [ 8]  539 	ld	(hl), a
                                    540 ;src\main.c:119: move_metasprite(player_metasprites[0], 0, 0, sprite_x, sprite_y);
      000221 21r34r00         [12]  541 	ld	hl, #_player_metasprites
      000224 2A               [ 8]  542 	ld	a, (hl+)
      000225 4F               [ 4]  543 	ld	c, a
      000226 7E               [ 8]  544 	ld	a, (hl)
                                    545 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      000227 21r00r00         [12]  546 	ld	hl, #___current_metasprite
      00022A 71               [ 8]  547 	ld	(hl), c
      00022B 23               [ 8]  548 	inc	hl
      00022C 77               [ 8]  549 	ld	(hl), a
                                    550 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      00022D 21r00r00         [12]  551 	ld	hl, #___current_base_tile
      000230 36 00            [12]  552 	ld	(hl), #0x00
                                    553 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      000232 F8 03            [12]  554 	ldhl	sp,	#3
      000234 7E               [ 8]  555 	ld	a, (hl)
      000235 F5               [16]  556 	push	af
      000236 33               [ 8]  557 	inc	sp
      000237 F8 07            [12]  558 	ldhl	sp,	#7
      000239 66               [ 8]  559 	ld	h, (hl)
      00023A 2E 00            [ 8]  560 	ld	l, #0x00
      00023C E5               [16]  561 	push	hl
      00023D CDr00r00         [24]  562 	call	___move_metasprite
      000240 E8 03            [16]  563 	add	sp, #3
                                    564 ;src\main.c:120: performantdelay(30);
      000242 3E 1E            [ 8]  565 	ld	a, #0x1e
      000244 CDr00r00         [24]  566 	call	_performantdelay
      000247 18 59            [12]  567 	jr	00127$
      000249                        568 00112$:
                                    569 ;src\main.c:123: else if (joy  & J_RIGHT)
      000249 0F               [ 4]  570 	rrca
      00024A 30 56            [12]  571 	jr	NC, 00127$
                                    572 ;src\main.c:125: if (check_map(local_x + 1, local_y) == '0')
      00024C 0C               [ 4]  573 	inc	c
      00024D C5               [16]  574 	push	bc
      00024E F8 04            [12]  575 	ldhl	sp,	#4
      000250 5E               [ 8]  576 	ld	e, (hl)
      000251 79               [ 4]  577 	ld	a, c
      000252 CDr0Cr00         [24]  578 	call	_check_map
      000255 C1               [12]  579 	pop	bc
      000256 D6 30            [ 8]  580 	sub	a, #0x30
      000258 20 48            [12]  581 	jr	NZ, 00127$
                                    582 ;src\main.c:127: local_x += 1;
      00025A F8 01            [12]  583 	ldhl	sp,	#1
      00025C 71               [ 8]  584 	ld	(hl), c
                                    585 ;src\main.c:128: goal_x = sprite_x + 16;
      00025D 78               [ 4]  586 	ld	a, b
      00025E C6 10            [ 8]  587 	add	a, #0x10
      000260 F8 05            [12]  588 	ldhl	sp,	#5
                                    589 ;src\main.c:129: state = right;
      000262 32               [ 8]  590 	ld	(hl-), a
      000263 36 02            [12]  591 	ld	(hl), #0x02
      000265 18 3B            [12]  592 	jr	00127$
      000267                        593 00126$:
                                    594 ;src\main.c:135: else if (state == right)
      000267 F8 04            [12]  595 	ldhl	sp,	#4
      000269 7E               [ 8]  596 	ld	a, (hl)
      00026A D6 02            [ 8]  597 	sub	a, #0x02
      00026C 20 34            [12]  598 	jr	NZ, 00127$
                                    599 ;src\main.c:137: if (sprite_x < goal_x)
      00026E F8 06            [12]  600 	ldhl	sp,	#6
      000270 3A               [ 8]  601 	ld	a, (hl-)
      000271 96               [ 8]  602 	sub	a, (hl)
      000272 30 2A            [12]  603 	jr	NC, 00121$
                                    604 ;src\main.c:139: sprite_x++;
      000274 23               [ 8]  605 	inc	hl
      000275 34               [12]  606 	inc	(hl)
                                    607 ;src\main.c:140: move_metasprite(player_metasprites[0], 0, 0, sprite_x, sprite_y);
      000276 21r34r00         [12]  608 	ld	hl, #_player_metasprites
      000279 2A               [ 8]  609 	ld	a, (hl+)
      00027A 4F               [ 4]  610 	ld	c, a
      00027B 7E               [ 8]  611 	ld	a, (hl)
      00027C 21r00r00         [12]  612 	ld	hl, #___current_metasprite
      00027F 71               [ 8]  613 	ld	(hl), c
      000280 23               [ 8]  614 	inc	hl
      000281 77               [ 8]  615 	ld	(hl), a
                                    616 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000282 21r00r00         [12]  617 	ld	hl, #___current_base_tile
      000285 36 00            [12]  618 	ld	(hl), #0x00
                                    619 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      000287 F8 03            [12]  620 	ldhl	sp,	#3
      000289 7E               [ 8]  621 	ld	a, (hl)
      00028A F5               [16]  622 	push	af
      00028B 33               [ 8]  623 	inc	sp
      00028C F8 07            [12]  624 	ldhl	sp,	#7
      00028E 66               [ 8]  625 	ld	h, (hl)
      00028F 2E 00            [ 8]  626 	ld	l, #0x00
      000291 E5               [16]  627 	push	hl
      000292 CDr00r00         [24]  628 	call	___move_metasprite
      000295 E8 03            [16]  629 	add	sp, #3
                                    630 ;src\main.c:141: performantdelay(10);
      000297 3E 0A            [ 8]  631 	ld	a, #0x0a
      000299 CDr00r00         [24]  632 	call	_performantdelay
      00029C 18 04            [12]  633 	jr	00127$
      00029E                        634 00121$:
                                    635 ;src\main.c:145: state = idle;
      00029E F8 04            [12]  636 	ldhl	sp,	#4
      0002A0 36 00            [12]  637 	ld	(hl), #0x00
      0002A2                        638 00127$:
                                    639 ;src\main.c:149: wait_vbl_done();
      0002A2 CDr00r00         [24]  640 	call	_wait_vbl_done
      0002A5 C3r5Er01         [16]  641 	jp	00129$
                                    642 ;src\main.c:151: }
      0002A8 E8 07            [16]  643 	add	sp, #7
      0002AA C9               [16]  644 	ret
                                    645 	.area _CODE
                                    646 	.area _INITIALIZER
                                    647 	.area _CABS (ABS)
